/*
* Правила для описания языка RJ
* Рябенький Сергей 2ПЗ-пс
*/

COMPILER RJ

// Определяем алфавит языка
CHARACTERS
 letter = "абвгґдеєжзиіїйклмнопрстуфхцчшщюяь_". // Буквы укр. алф. включая нижнее подчеркивание
 digit = "0123456789". // Цифры
 cr = '\r'.  // Возврат каретки на начало строки
 lf = '\n'. // Переход на новую строку
 tab = '\t'. // Табуляция

// Определяем лексемы
TOKENS
  ident = letter {letter | digit}. // Идентификатор
  number = digit {digit}. // Число
  if = "ЯКЩО". // Зарезервированное слово ЯКЩО
  then = "ТОДІ". // Зарезервированное слово ТОДІ
  else = "ІНАКШЕ". // Зарезервированное слово ІНАКШЕ

// Добавляем комментарии к программе
// Многострочный комментаций:
COMMENTS FROM "/*" TO "*/" NESTED
// Однострочный комментарий:
COMMENTS FROM "//" TO lf

// Игнорируемые символы
IGNORE cr + lf + tab

// Синтаксические правила для языка RJ в формате РБНФ
PRODUCTIONS
RJ = "Program" ident {Stat|IfStatBlock}.// Правила для текста программы
IfStatBlock =     IfPar ExpRel ThElPar.//Конструкция условного выражения ЯКЩО
IfPar = if "("{if "("}.//Устраняем LL 1 конфликт несколько альтернатив для if
ThElPar = ")"StatThEl{")"StatThEl}.//Устраняем LL 1 конфликт несколько альтернатив для then else
StatThEl = "{" then Stat [else Stat] "}". // Правила для блока ТОДІ ІНАКШЕ
ExpRel = ident RelOp Expr. // Правила для выражения отношения в блоке ЯКЩО
Stat =        ident "=" Expr ";". // Правила для выражений Напр. а = 5+5*8;
Expr =       SimExpr [RelOp SimExpr]. // Правила для сложных матем. уравнений. Напр. 5*4-6/2.
SimExpr =    Term {AddOp Term}. // Правила для простых мат. уравнений. Напр. 5+5, 10-5.
Term =       Factor {MulOp Factor}. // Правила для уравнений с умнож. и делением. Напр. 5*5, 100/10.
Factor =     number. // Правила для простого числа
AddOp =      "+" | "-". // Правила для операторов плюс и минус.
MulOp =      "*" | "/". // Правила для операторов умножить и разделить.
RelOp =      "=" | "<" | ">". // Правила для операторов отношения.

// Окончание правил описания языка RJ
END RJ.

